version: '3.8'

services:
  postgres:
    image: postgis/postgis:14-3.2
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: bewuketu
      POSTGRES_DB: MinabEvent
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - minab_event_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  hasura:
    image: hasura/graphql-engine:v2.28.0
    container_name: hasura
    ports:
      - "8080:8080"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:bewuketu@postgres:5432/MinabEvent
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: "myadminsecretkey"
      HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS256", "key": "minab_secret_keyminab_secret_keyminab_secret_keyminab_secret_key" }'      # HASURA_GRAPHQL_ADMIN_SECRET: adminsecretkey
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
    networks:
      - minab_event_network
    depends_on:
      postgres:
        condition: service_healthy

  backend:
    build:
      context: ./backend
      # dockerfile: Dockerfile
    container_name: backend
    ports:
      - "5050:5050"
    networks:
      - minab_event_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/health || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

networks:
  minab_event_network:
    name: minab_event_network  # Specify the desired network name
    driver: bridge

volumes:
  postgres_data:
